def BUILD = "$BUILD_NUMBER"
def IMAGE_REPO = "maheshgprasad/express_app"
def SERVICE = "b-safe-web"
def HOST_TO_CONTAINER_PORT = "80:3000"
def PRJ_NAME = "aetna-b-safe"
pipeline {
    agent any

    stages {
        stage('Git Checkout') {
            steps {
                lean Workspace before Checkout
                cleanWs()
                it Checkout
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'jenkins_git_auth', url: 'https:ithub.com/maheshgprasad/project-aetna.git/']]])
            }
        }
        stage('NPM Install') {
            steps {
                dir('./Application') {
                    script {
                        sh "npm install"
                    }
                }
                
            }
        }
        stage('Docker Image Build') {
            steps {
                script {
                    sh "docker build -t ${IMAGE_REPO}:v${BUILD} -f ./Automation/Dockerfile . "
                    sh "docker tag ${IMAGE_REPO}:v${BUILD} ${IMAGE_REPO}:latest"
                }
            }
        }
        stage('Run Docker Container') {
            steps {
                script {
                    sh "docker run -d -p ${HOST_TO_CONTAINER_PORT} --name ${PRJ_NAME} ${IMAGE_REPO}:v${BUILD}"
                    sh "sleep 5s" llows some time for the container to be ready to receive any requests
                }
            }
        }
        stage('Container Health Check') {
            steps {
                script {
                    sh "curl localhost/health"
                }                    
            }
        }
        stage('API Response Check') {
            steps {
                script {
                    sh "curl localhost/api/v1"
                }                    
            }
        }        
        stage('Container Cleanup') {
            steps {
                script {
                    sh "docker ps --filter name=${PRJ_NAME} -q |xargs docker stop |xargs docker rm"
                }
            }
        }
        stage('Docker Push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker_hub_cred', passwordVariable: 'DCKR_PSWD', usernameVariable: 'DCKR_USR')]) {
                script {                   
                    sh "echo ${DCKR_PSWD} | docker login -u ${DCKR_USR} --password-stdin"
                    sh "echo 'docker push ${IMAGE_REPO}:v${BUILD}' "
                    sh "echo 'docker push ${IMAGE_REPO}:latest' "
                    }    
                }
            }
        }
        // stage('Update Service') {
        //     steps {
        //         sh "ansible-playbook deployment.yaml -e 'container_name="" service_name="b-safe-service" ' "
        //     }
        // }

    }
}